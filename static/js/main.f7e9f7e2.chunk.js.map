{"version":3,"sources":["components/Container/Container.js","components/Modal/Modal.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","galleryApi.js","GalleryView.js","App.js","index.js"],"names":["Container","children","className","Modal","onClose","useEffect","window","addEventListener","handleCloseClick","removeEventListener","event","currentTarget","target","code","onClick","Searchbar","onSubmit","useState","query","setQuery","e","preventDefault","type","value","onChange","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","alt","dataSource","ImageGallery","gallery","map","id","webformatURL","largeImageURL","tags","Button","apiKey","FetchGallery","currentPage","pageSize","url","fetch","then","response","json","hits","catch","error","console","log","propTypes","searchQuery","PropTypes","string","isRequired","number","GalleryView","openModal","setGallery","setCurrentPage","isLoading","setIsLoading","setError","fetchGallery","addGallery","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","length","App","setLargeImageURL","showModal","setShowModal","largeImageUrl","dataset","source","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7e9f7e2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    // console.log('addEventListener');\r\n    window.addEventListener('keydown', handleCloseClick);\r\n\r\n    return () => {\r\n      // console.log('removeEventListener');\r\n      window.removeEventListener('keydown', handleCloseClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleCloseClick = event => {\r\n    if (event.currentTarget === event.target || event.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleCloseClick}>\r\n      <div className=\"Modal\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt, dataSource }) => {\r\n  return (\r\n    <img\r\n      src={src}\r\n      alt={alt}\r\n      data-source={dataSource}\r\n      className=\"ImageGalleryItem-image\"\r\n    />\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  dataSource: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ gallery, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <li className=\"ImageGalleryItem\" key={id} onClick={onClick}>\r\n          <ImageGalleryItem\r\n            src={webformatURL}\r\n            alt={tags}\r\n            dataSource={largeImageURL}\r\n            className=\"ImageGalleryItem-image\"\r\n          ></ImageGalleryItem>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  gallery: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst apiKey = '20386842-9f390c2ddb67ac927c9e310bb';\r\n\r\nconst FetchGallery = (query = '', currentPage = 1, pageSize = 12) => {\r\n  const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${query}&page=${currentPage}&per_page=${pageSize}&key=${apiKey}`;\r\n\r\n  return fetch(url)\r\n    .then(response => response.json())\r\n    .then(({ hits }) => {\r\n      currentPage += 1;\r\n      return hits;\r\n    })\r\n    .catch(error => console.log(error));\r\n};\r\n\r\nFetchGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  currentPage: PropTypes.number,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nexport default FetchGallery;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport FetchGallery from './galleryApi';\r\n\r\nfunction GalleryView({ openModal }) {\r\n  const [query, setQuery] = useState('');\r\n  const [gallery, setGallery] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (query !== '') {\r\n      fetchGallery();\r\n    }\r\n  }, [query]);\r\n\r\n  const onChangeQuery = searchQuery => {\r\n    setQuery(searchQuery);\r\n    setCurrentPage(1);\r\n    setGallery([]);\r\n    setError(null);\r\n  };\r\n\r\n  const fetchGallery = () => {\r\n    setIsLoading(true);\r\n\r\n    FetchGallery(query, currentPage)\r\n      .then(addGallery => {\r\n        setGallery([...gallery, ...addGallery]);\r\n        setCurrentPage(currentPage + 1);\r\n      })\r\n      .catch(error => setError(error))\r\n      .finally(() => setIsLoading(false))\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && <h1>Error!</h1>}\r\n      <Searchbar onSubmit={onChangeQuery} />\r\n\r\n      <ImageGallery gallery={gallery} onClick={openModal}></ImageGallery>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      {gallery.length > 0 && <Button onClick={fetchGallery}></Button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nGalleryView.propTypes = {\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GalleryView;\r\n","import React, { useState } from 'react';\nimport Container from './components/Container';\nimport Modal from './components/Modal';\nimport GalleryView from './GalleryView';\nimport './App.css';\n\nfunction App() {\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = event => {\n    const largeImageUrl = event.target.dataset.source;\n    setLargeImageURL(largeImageUrl);\n\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  return (\n    <Container>\n      <GalleryView openModal={openModal}></GalleryView>\n\n      {showModal && (\n        <Modal onClick={openModal} onClose={toggleModal}>\n          <img src={largeImageURL} alt=\"\" />\n        </Modal>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}